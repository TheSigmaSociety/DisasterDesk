// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model EmergencyCall {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Caller Information
  callerName    String?
  callerPhone   String?
  
  // Location Information
  location      String
  latitude      Float?
  longitude     Float?
  
  // Emergency Details
  emergencyType String   // FIRE, MEDICAL, POLICE, ACCIDENT, NATURAL_DISASTER, HAZMAT, OTHER
  severity      String   // LOW, MEDIUM, HIGH, CRITICAL
  description   String
  casualties    Int      @default(0)
  
  // Call Processing
  transcript    String?
  aiConfidence  Float?
  autoEscalated Boolean  @default(false)
  humanTakeover Boolean  @default(false)
  
  // Status and Priority
  status        String   @default("PENDING") // PENDING, IN_PROGRESS, DISPATCHED, RESOLVED, CANCELLED
  priority      String   @default("MEDIUM")  // LOW, MEDIUM, HIGH, CRITICAL
  
  // Resources
  resources     ResourceAssignment[]
  
  @@map("emergency_calls")
}

model Resource {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Resource Details
  type        String   // FIRE_TRUCK, AMBULANCE, POLICE_CAR, HAZMAT_UNIT, RESCUE_UNIT, HELICOPTER
  identifier  String   @unique // Unit number or call sign
  status      String   @default("AVAILABLE") // AVAILABLE, DISPATCHED, BUSY, OUT_OF_SERVICE
  
  // Location
  currentLat  Float?
  currentLng  Float?
  station     String?
  
  // Assignments
  assignments ResourceAssignment[]
  
  @@map("resources")
}

model ResourceAssignment {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relationships
  callId        String
  call          EmergencyCall @relation(fields: [callId], references: [id], onDelete: Cascade)
  resourceId    String
  resource      Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  
  // Assignment Details
  status        String   @default("ASSIGNED") // ASSIGNED, EN_ROUTE, ON_SCENE, COMPLETED, CANCELLED
  assignedAt    DateTime @default(now())
  dispatchedAt  DateTime?
  arrivedAt     DateTime?
  completedAt   DateTime?
  
  // Estimated times
  etaMinutes    Int?
  
  @@map("resource_assignments")
}
